# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created

name: Build and Deploy to GKE

on:
  push:
    branches:
      - 'master'
      
# Environment variables available to all jobs and steps in this workflow
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-east1-b
  GKE_CLUSTER: realworld-app-cluster
  IMAGE: realworld-app
  REGISTRY_HOSTNAME: us.gcr.io
  DEPLOYMENT_NAME: realworld-app      

# Environment variables available to all jobs and steps in this workflow

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
    
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
    
    # Install helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        #gcloud container clusters create $GKE_CLUSTER \
        # --zone $GKE_ZONE \
        # --project $PROJECT_ID \
        # --num-nodes 3
        gcloud container clusters get-credentials $GKE_CLUSTER \
          --zone $GKE_ZONE \
          --project $PROJECT_ID
        #helm upgrade $DEPLOYMENT_NAME-installation $DEPLOYMENT_NAME \
        #  --set $IMAGE.image.tag=$GITHUB_SHA \
        #  --wait
        helm upgrade $DEPLOYMENT_NAME-installation $DEPLOYMENT_NAME \
           --set $IMAGE.image.tag=$GITHUB_SHA 
        kubectl rollout status deployment/$DEPLOYMENT_NAME-installation
        kubectl get services -o wide
